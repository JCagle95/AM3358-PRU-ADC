.origin 0
.entrypoint START

.struct dataLoader
	.u32	RunFlag
	.u32	Delay
	.u32	MaxSize
.ends

// Define Base address for memory
#define	PRU_DATA1_BASE			0x00000000
#define	PRU_DATA0_BASE			0x00002000
#define	PRU_Shared_BASE			0x00010000

// Define Interrupt 
#define PRU0_PRU1_INTERRUPT     0x11
#define PRU1_PRU0_INTERRUPT     0x12
#define PRU0_ARM_INTERRUPT      0x13
#define PRU1_ARM_INTERRUPT      0x14
#define ARM_PRU0_INTERRUPT      0x15
#define ARM_PRU1_INTERRUPT      0x16

// Define Variables
#define PRU_RAM_ADDRESS			R15
#define BLOCK1_BASE_ADDRESS		R16
#define BLOCK2_BASE_ADDRESS		R17
#define BLOCK_SIZE				R18
#define DATA_ADDRESS			R19
#define DATA 					R20
#define BLOCK_COUNT				R21
#define DELAY_REG				R22
#define RATE_REG				R23

// Define SPI Pins
#define MOSI	R30.T0 		// Master Out Slave In 	P8.45 - Output
#define MISO	R31.T1		// Master In Slave Out 	P8.46 - Input
#define FS		R30.T2		// Chip Selection 		P8.43 - Output
#define SCLK	R30.T3		// Serial Clock 		P8.44 - Output
#define CONVST	R30.T4		// Conversion Start 	P8.41 - Output
#define EOC		R31.T5		// End of Conversion	P9.42 - Input

START:
	LDI		PRU_RAM_ADDRESS, PRU1_DATA_BASE
	ADD		BLOCK1_BASE_ADDRESS, PRU_RAM_ADDRESS, OFFSET(dataLoader.Data)
	MOV		BLOCK2_BASE_ADDRESS, PRU_SHARED_BASE
	MOV		DATA_ADDRESS, BLOCK1_BASE_ADDRESS
	LBBO	BLOCK_SIZE, PRU_RAM_ADDRESS, OFFSET(dataLoader.MaxSize), 4
	LDI		BLOCK_COUNT, 0
	
	SET		FS
	CLR		MISO
	CLR		MOSI
	CLR		SCLK
	
MAIN_LOOP:
	AND		DATA, DATA, 0
	LDI		R0, 17
	CLR 	FS

READ_DATA:
	SUB		R0, R0, 1
	QBEQ	DATA_COMPLETE, R0, 0
	SET		SCLK
	QBBC	LEFT_SHIFT, MISO
	SET		DATA.T0
	
LEFT_SHIFT:
	LSL		DATA, DATA, 1

DELAY:
	LDI		DELAY_REG, 100

DELAY_LOOP:
	SUB		DELAY_REG, DELAY_REG, 1
	QBLT	DELAY_LOOP, DELAY_REG, 0
	
	QBBC	READ_DATA, SCLK
	CLR		SCLK
	JMP		DELAY

DATA_COMPLETE:
	SBBO	DATA, DATA_ADDRESS, 0, 2
	ADD 	DATA_ADDRESS, DATA_ADDRESS, 2
	
	// Reset Initial Condition	
	SET		FS
	CLR		MISO
	CLR		MOSI
	CLR		SCLK
	
	// Check to see if the blocks are filled or not
	ADD		R1, BLOCK1_BASE_ADDRESS, BLOCK_SIZE
	QBEQ	TRIGGER, DATA_ADDRESS, R1
	ADD		R1, BLOCK2_BASE_ADDRESS, BLOCK_SIZE
	QBEQ	TRIGGER, DATA_ADDRESS, R1

CHECK:
	LBBO	R0, PRU_RAM_ADDRESS, OFFSET(dataLoader.RunFlag), 4
	QBEQ	EXIT, R0, 0	
	LBBO	DELAY_REG, PRU_RAM_ADDRESS, OFFSET(dataLoader.Delay), 4

INTERSAMPLE_DELAY:
	SUB		DELAY_REG, DELAY_REG, 1
	QBLT	INTERSAMPLE_DELAY, DELAY_REG, 0
	JMP		MAIN_LOOP

TRIGGER:
	ADD		BLOCK_COUNT, BLOCK_COUNT, 1
	SBBO	BLOCK_COUNT, PRU_RAM_ADDRESS, OFFSET(dataLoader.DataReady), 4
	QBBC	RESET_ADDRESS, BLOCK_COUNT, 0
	MOV		DATA_ADDRESS, BLOCK2_BASE_ADDRESS
	JMP		CHECK

RESET_ADDRESS:
	MOV		DATA_ADDRESS, BLOCK1_BASE_ADDRESS
	JMP		CHECK
	
EXIT:
	MOV		R31.b0, PRU1_ARM_INTERRUPT + 16
	HALT	